<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd ">
    <spring:beans>
        <spring:import resource="classpath:api.xml" />
    </spring:beans>
    <munit:config mock-connectors="false" mock-inbounds="false" />
    <http:request-config name="HTTP_Request_Configuration" host="localhost" port="8081" basePath="/api" />
    <munit:test name="get:/firstresource:api-config-200-application/json-FlowTest" description="Verifying functionality of [get:/firstresource:api-config-200-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/firstresource">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json" />
                <http:header headerName="Authorization" value="e01653af-be22-47e1-b582-54d7c0c37d36" />
            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(200))]" doc:name="assert that - http.status eq 200" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_200_firstresource_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/firstresource:api-config-201-application/json-FlowTest" description="Verifying functionality of [get:/firstresource:api-config-201-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/firstresource">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json" />
                <http:header headerName="Authorization" value="e01653af-be22-47e1-b582-54d7c0c37d36" />
            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(201))]" doc:name="assert that - http.status eq 201" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_201_firstresource_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/firstresource:api-config-204-application/json-FlowTest" description="Verifying functionality of [get:/firstresource:api-config-204-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/firstresource">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json" />
                <http:header headerName="Authorization" value="e01653af-be22-47e1-b582-54d7c0c37d36" />
            </http:request-builder>
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(204))]" doc:name="assert that - http.status eq 204" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_204_firstresource_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/firstresource:api-config-400-application/json-FlowTest" description="Verifying functionality of [get:/firstresource:api-config-400-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/firstresource">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json" />
                <http:header headerName="Authorization" value="e01653af-be22-47e1-b582-54d7c0c37d36" />
            </http:request-builder>
            <http:success-status-code-validator values="400" />
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(400))]" doc:name="assert that - http.status eq 400" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_400_firstresource_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/firstresource:api-config-401-application/json-FlowTest" description="Verifying functionality of [get:/firstresource:api-config-401-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/firstresource">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json" />
                <http:header headerName="Authorization" value="e01653af-be22-47e1-b582-54d7c0c37d36" />
            </http:request-builder>
            <http:success-status-code-validator values="401" />
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(401))]" doc:name="assert that - http.status eq 401" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_401_firstresource_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/firstresource:api-config-404-application/json-FlowTest" description="Verifying functionality of [get:/firstresource:api-config-404-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/firstresource">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json" />
                <http:header headerName="Authorization" value="e01653af-be22-47e1-b582-54d7c0c37d36" />
            </http:request-builder>
            <http:success-status-code-validator values="404" />
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(404))]" doc:name="assert that - http.status eq 404" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_404_firstresource_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/firstresource:api-config-409-application/json-FlowTest" description="Verifying functionality of [get:/firstresource:api-config-409-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/firstresource">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json" />
                <http:header headerName="Authorization" value="e01653af-be22-47e1-b582-54d7c0c37d36" />
            </http:request-builder>
            <http:success-status-code-validator values="409" />
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(409))]" doc:name="assert that - http.status eq 409" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_409_firstresource_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
    <munit:test name="get:/firstresource:api-config-500-application/json-FlowTest" description="Verifying functionality of [get:/firstresource:api-config-500-application/json]">
        <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/firstresource">
            <http:request-builder>
                <http:header headerName="Accept" value="application/json" />
                <http:header headerName="Authorization" value="e01653af-be22-47e1-b582-54d7c0c37d36" />
            </http:request-builder>
            <http:success-status-code-validator values="500" />
        </http:request>
        <object-to-string-transformer doc:name="http response to string" />
        <munit:assert-true message="The HTTP Status code is not correct!" condition="#[messageInboundProperty('http.status').is(eq(500))]" doc:name="assert that - http.status eq 500" />
        <munit:assert-on-equals message="The response payload is not correct!" expectedValue="#[getResource('scaffolder/response/get_500_firstresource_application_json.json').asString()]" actualValue="#[payload]" doc:name="assert that - payload is as expected" />
    </munit:test>
</mule>
